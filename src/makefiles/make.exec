#####
# SEDONA makefile
#######
.PHONY: all clean realclean gomc snopac spectrum chk la_test

SEDONA_GIT_VERSION := $(shell cd $(SEDONA_HOME); git describe --abbrev=12 --dirty --always --tags)
COMPILE_DATETIME := $(shell date --iso=seconds)
DEFINES += -DSEDONA_GIT_VERSION=\"$(SEDONA_GIT_VERSION)\" -DCOMPILE_DATETIME=\"$(COMPILE_DATETIME)\"

ifdef USE_EIGEN
DEFINES += -DUSE_EIGEN=$(USE_EIGEN)
endif
CXXFLAGS += $(DEFINES)


# location of gsl, if not already set
ifndef GSL_INC
GSL_INC=$(GSL_DIR)/include
endif
ifndef GSL_LIB
GSL_LIB=$(GSL_DIR)/lib
endif

# location of lua, if not already set
ifndef LUA_INC
LUA_INC=$(LUA_DIR)/src
endif
ifndef LUA_LIB
LUA_LIB=$(LUA_DIR)/src
endif

# location of hdf5, if not already set
ifndef HDF_INC
HDF_INC=$(HDF5_DIR)/include
endif
ifndef HDF_LIB
HDF_LIB=$(HDF5_DIR)/lib
endif

CCOPT = -I$(GSL_INC) -I$(LUA_INC) -I$(HDF_INC)


# location of eigen, if not already set
ifdef USE_EIGEN
ifeq ($USE_EIGEN,1)
ifndef EIG_INC
CCOPT += -I$(EIG_DIR)
else
CCOPT += -I$(EIG_INC)
endif
endif
endif


CLOPT = $(CCOPT) -L$(GSL_LIB) -L$(LUA_LIB) -L$(HDF_LIB) -llua -lgsl -lgslcblas -lhdf5 -lhdf5_hl -ldl

EXCLUDE=snopac.cpp hdf5check.cpp main.cpp compute_spectrum.cpp locate_array_test.cpp
SOURCES=$(filter-out $(EXCLUDE), $(wildcard *.cpp))
OBJECTS=$(SOURCES:.cpp=.o)


all: $(OBJECTS)
	make gomc snopac

tests: $(OBJECTS)
	make gomc snopac chk spectrum la_test

gomc: $(OBJECTS) main.cpp
	$(CXX) $(CXXFLAGS) -o gomc $(OBJECTS) main.cpp $(CLOPT)

snopac: $(OBJECTS) snopac.cpp
	$(CXX) $(CXXFLAGS) -o snopac $(OBJECTS) snopac.cpp $(CLOPT)

chk: $(OBJECTS) hdf5check.cpp
	$(CXX) $(CXXFLAGS) -o chk $(OBJECTS) hdf5check.cpp $(CLOPT)

spectrum: $(OBJECTS) compute_spectrum.cpp
	$(CXX) $(CXXFLAGS) -o spectrum $(OBJECTS) compute_spectrum.cpp $(CLOPT)

la_test: $(OBJECTS) locate_array_test.cpp
	$(CXX) $(CXXFLAGS) -o la_test $(OBJECTS) locate_array_test.cpp $(CLOPT)

.cpp.o:
	$(CXX) $(CXXFLAGS) $(CCOPT) -c -o $@ $<

clean:
	rm -f $(OBJECTS) gomc snopac

realclean: clean
	rm -f *.cpp *.h
